@page
@model RegisterModel
@{
	ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>
<div>
	<h2>Create a new account.</h2>
	<hr />
</div>
<div class="container">
	<div class="row">
		<div class="col">
			<form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">

				<div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
				<div class="form-floating mb-3">
					<input asp-for="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
					<label asp-for="Input.Email">Email</label>
					<span asp-validation-for="Input.Email" class="text-danger"></span>
				</div>
				<div class="form-floating mb-3">
					<input asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
					<label asp-for="Input.Password">Password</label>
					<span asp-validation-for="Input.Password" class="text-danger"></span>
				</div>
				<div class="form-floating mb-3">
					<input asp-for="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
					<label asp-for="Input.ConfirmPassword">Confirm Password</label>
					<span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
				</div>
				<button id="registerSubmit" type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
			</form>
		</div>
		@* --- БЛОК ГЕНЕРАТОРА ПАРОЛІВ --- *@
		<div class="mb-6 p-5 border rounded col">
			<h5>Згенерувати надійний пароль:</h5>
			<div class="input-group mb-2">
				<input type="text" id="generatedPassword" class="form-control" placeholder="Згенерований пароль..." readonly>
				<button class="btn btn-outline-secondary" type="button" id="copyPasswordBtn" title="Копіювати пароль">
					<i class="fas fa-copy">copy</i>
				</button>
			</div>
			<div class="mb-2">
				<label for="passwordLengthSlider" class="form-label-sm">Довжина пароля: <output id="passwordLengthValue" for="passwordLengthSlider"></output></label>
				<input type="range" class="form-range" id="passwordLengthSlider" value="14" min="8" max="64">
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="checkbox" id="includeUppercase" checked>
				<label class="form-check-label" for="includeUppercase">Великі літери (A-Z)</label>
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="checkbox" id="includeLowercase" checked>
				<label class="form-check-label" for="includeLowercase">Малі літери (a-z)</label>
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="checkbox" id="includeNumbers" checked>
				<label class="form-check-label" for="includeNumbers">Цифри (0-9)</label>
			</div>
			<div class="form-check form-check-inline">
				<input class="form-check-input" type="checkbox" id="includeSymbols" checked>
				<label class="form-check-label" for="includeSymbols">Символи (!#...)</label>
			</div>
			<div class="mt-2">
				<button class="btn btn-success btn-sm" type="button" id="generatePasswordBtn">Згенерувати</button>
			</div>
			<small id="copyFeedback" class="text-success d-block mt-1" style="visibility: hidden;">Скопійовано!</small>
		</div>
	</div>
</div>

@section Scripts {

	<partial name="_ValidationScriptsPartial" />
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
	<script>
		$(document).ready(function () {
			const generatedPasswordField = $('#generatedPassword');
			const copyButton = $('#copyPasswordBtn');
			const generateButton = $('#generatePasswordBtn'); // Кнопка "Згенерувати"
			const usePasswordButton = $('#usePasswordBtn');
			const passwordInput = $('#Input_Password');
			const confirmPasswordInput = $('#Input_ConfirmPassword');
			const copyFeedback = $('#copyFeedback');

			// Нові елементи для слайдера довжини
			const lengthSlider = $('#passwordLengthSlider');
			const lengthValueDisplay = $('#passwordLengthValue');

			const uppercaseCheckbox = $('#includeUppercase');
			const lowercaseCheckbox = $('#includeLowercase');
			const numbersCheckbox = $('#includeNumbers');
			const symbolsCheckbox = $('#includeSymbols');

			const lowerCaseChars = "abcdefghijklmnopqrstuvwxyz";
			const upperCaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
			const numberChars = "0123456789";
			const symbolChars = "!#$%^&*()_+-=[]{}|;:,.<>/?";

			function generatePassword() {
				const length = parseInt(lengthSlider.val()); // Зчитуємо довжину зі слайдера
				lengthValueDisplay.text(length); // Оновлюємо відображуване значення довжини

				let charSet = "";
				let guaranteedChars = "";

				if (uppercaseCheckbox.is(':checked')) {
					charSet += upperCaseChars;
					if (upperCaseChars.length > 0) guaranteedChars += upperCaseChars[Math.floor(Math.random() * upperCaseChars.length)];
				}
				if (lowercaseCheckbox.is(':checked')) {
					charSet += lowerCaseChars;
					if (lowerCaseChars.length > 0) guaranteedChars += lowerCaseChars[Math.floor(Math.random() * lowerCaseChars.length)];
				}
				if (numbersCheckbox.is(':checked')) {
					charSet += numberChars;
					if (numberChars.length > 0) guaranteedChars += numberChars[Math.floor(Math.random() * numberChars.length)];
				}
				if (symbolsCheckbox.is(':checked')) {
					charSet += symbolChars;
					if (symbolChars.length > 0) guaranteedChars += symbolChars[Math.floor(Math.random() * symbolChars.length)];
				}

				if (charSet === "") {
					generatedPasswordField.val("Виберіть типи символів!");
					return;
				}

				let passwordArray = guaranteedChars.split('');
				const remainingLength = Math.max(0, length - passwordArray.length);

				for (let i = 0; i < remainingLength; i++) {
					passwordArray.push(charSet[Math.floor(Math.random() * charSet.length)]);
				}

				// Перемішуємо масив символів пароля
				for (let i = passwordArray.length - 1; i > 0; i--) {
					const j = Math.floor(Math.random() * (i + 1));
					[passwordArray[i], passwordArray[j]] = [passwordArray[j], passwordArray[i]];
				}
				if (passwordArray.length > length) {
					passwordArray = passwordArray.slice(0, length);
				}

				generatedPasswordField.val(passwordArray.join(''));
				copyFeedback.css('visibility', 'hidden');
			}

			// Обробники подій
			generateButton.on('click', generatePassword);

			lengthSlider.on('input', function() { // Подія 'input' для слайдера
				lengthValueDisplay.text($(this).val()); // Оновлюємо цифру довжини
				generatePassword(); // Регенеруємо пароль
			});

			// Додаємо обробники для чекбоксів, щоб пароль регенерувався при їх зміні
			uppercaseCheckbox.on('change', generatePassword);
			lowercaseCheckbox.on('change', generatePassword);
			numbersCheckbox.on('change', generatePassword);
			symbolsCheckbox.on('change', generatePassword);


			copyButton.on('click', function () {
				if(generatedPasswordField.val() && generatedPasswordField.val() !== "Виберіть типи символів!") {
					navigator.clipboard.writeText(generatedPasswordField.val()).then(function () {
						copyFeedback.css('visibility', 'visible');
						setTimeout(function() {
							copyFeedback.css('visibility', 'hidden');
						}, 2000);
					}, function (err) {
						console.error('Помилка копіювання: ', err);
						alert("Не вдалося скопіювати пароль. Можливо, ваш браузер не підтримує цю функцію або сторінка не є захищеною (HTTPS).");
					});
				}
			});

			usePasswordButton.on('click', function () {
				const pass = generatedPasswordField.val();
				if (pass && pass !== "Виберіть типи символів!") {
					passwordInput.val(pass);
					confirmPasswordInput.val(pass);
					passwordInput.trigger('input');
					confirmPasswordInput.trigger('input');
				}
			});

			generatePassword();
		});
	</script>
}
